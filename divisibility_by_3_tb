library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity divisibility_by_3_tb is
--  Port ( );
end divisibility_by_3_tb;

architecture Behavioral of divisibility_by_3_tb is

    -- Component Declaration for the Unit Under Test (UUT)
    component divisibility_by_3 is
        Port ( rst : in STD_LOGIC;
               clk : in STD_LOGIC;
               din : in STD_LOGIC;
               dout : out STD_LOGIC_VECTOR(1 downto 0));
    end component divisibility_by_3;

    -- Outputs
    signal dout :  STD_LOGIC_VECTOR(1 downto 0);

    -- Inputs
    signal rst :  STD_LOGIC := '0';
    signal din :  STD_LOGIC := '0';
    
    -- Clock 
    signal clk : STD_LOGIC := '1';
    constant clk_period : time := 20 ns;
    
    -- Internal signals
    constant num : integer := 3;
    signal number : std_logic_vector(7 downto 0) := std_logic_vector(to_unsigned(num, 8));

begin

    -- Instantiate the Unit Under Test (UUT)
    UUT : divisibility_by_3 port map (rst => rst, clk => clk, din => din, dout => dout);

    -- Clock process definition
    clk_process : process (clk)
    begin
        clk <= not clk after clk_period/2;
    end process;
    
    stim_proc : process is
        variable test : integer := 0;
    begin
        
        for num in 0 to 255 loop
            rst <= '1';
                number <= std_logic_vector(to_unsigned(num, 8)); 
                wait for clk_period;
            rst <= '0';

            for i in 7 downto 0 loop        
                din <= number(i);
                wait for clk_period;
            end loop;  
        
            wait for clk_period;
            --wait until falling_edge(clk);
            
            test := num mod 3;
    
            assert test = to_integer(unsigned(dout))
                report "Wrong result for number = " & integer'image(num)
                severity failure;         
        end loop;
                    
        wait; 
    end process; 

end Behavioral;
