library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity robot_mealy is
    Port ( clk : in STD_LOGIC;
           rst : in STD_LOGIC;
           din : in STD_LOGIC;
           dout : out STD_LOGIC);
end robot_mealy;

architecture Behavioral of robot_mealy is

type states is (S0, S1);
signal state, next_state : states := S0;

begin

	--state register
	process (clk, rst) is
	begin
		if rst = '1' then
			state <= S0;
		elsif rising_edge(clk) then
			state <= next_state;
		end if;
	end process;

	-- next state logic
	process(state, din) is
	begin
		case state is
			when S0 =>
				if din = '1' then
					next_state <= S0;
				else
					next_state <= S1;
				end if;			
			when S1 =>
				if din = '1' then
					next_state <= S0;
				else
					next_state <= S1;
				end if;			
			when others =>
				next_state <= S0;
		end case;
	end process;

	-- output logic
	dout <= '1' when (din = '1' and state = S1) else '0';
	
end Behavioral;
