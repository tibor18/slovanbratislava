library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity rom_async_tb is
--  Port ( );
end rom_async_tb;

architecture Behavioral of rom_async_tb is

    -- Component Declaration for the Unit Under Test (UUT)
    component rom_async is
        Port ( Addr : in STD_LOGIC_VECTOR (3 downto 0);
               Data : out STD_LOGIC_VECTOR (6 downto 0));
    end component rom_async;
    
    -- Outputs
    signal Data : STD_LOGIC_VECTOR (6 downto 0);

    -- Inputs
    signal Addr : STD_LOGIC_VECTOR (3 downto 0) := (others => '0');

    type Memory is array (0 to 15) of std_logic_vector(6 downto 0);
    -- Seven-segment display codes
    constant ROM : Memory := ( "0000001",  -- "0" 
                               "1001111",  -- "1"
                               "0010010",  -- "2" 
                               "0000110",  -- "3"  
                               "1001100",  -- "4" 
                               "0100100",  -- "5" 
                               "0100000",  -- "6" 
                               "0001111",  -- "7"
                               "0000000",  -- "8" 
                               "0000100",  -- "9" 
                               "0000010",  -- a 
                               "1100000",  -- b
                               "0110001",  -- C
                               "1000010",  -- d 
                               "0110000",  -- E 
                               "0111000"   -- F
                             );

begin
    
    -- Instantiate the Unit Under Test (UUT)
    UUT : rom_async port map (Addr => Addr, Data => Data);

    process
        variable test : integer := 0;    
    begin
        wait for 100 ns;
        
        for i in 0 to 15 loop
            Addr <= std_logic_vector(to_unsigned(i, Addr'length));
            wait for 20ns;
            
            test := to_integer(unsigned (ROM(to_integer(unsigned(Addr)))));
            
            assert test = to_integer(unsigned(Data))
                report "Wrong result. Expected = " & integer'image(test)
                severity failure;
            
        end loop;
        
        wait;
    end process;

end Behavioral;
